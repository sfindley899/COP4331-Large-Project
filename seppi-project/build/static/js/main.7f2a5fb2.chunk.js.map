{"version":3,"sources":["logo.svg","components/PageTitle.js","components/Register.js","components/Login.js","components/LoginToRegister.js","components/LoginPage.js","components/ForgotPassword.js","components/LoggedInName.js","components/CardUI.js","components/CardPage.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","PageTitle","id","style","color","Register","React","useState","firstName","lastName","email","password","confirmPassword","data","setData","handleChange","event","target","name","value","class","width","textAlign","margin","className","to","type","placeholder","onChange","required","confrirmPassword","Login","Component","message","setMessage","doLogin","a","preventDefault","obj","js","JSON","stringify","fetch","method","body","headers","response","text","res","parse","alert","user","localStorage","setItem","window","location","href","toString","onSubmit","htmlFor","aria-describedby","LoginPage","show","setShowLogin","handleCloseLogin","showreg","setShowRegister","handleCloseRegister","regdata","setRegData","handleRegChange","backgroundImage","backgroundRepeat","height","backgroundSize","onClick","position","backgroundColor","padding","marginTop","Modal","onHide","Header","closeButton","Title","Body","Footer","Button","variant","ForgotPassword","forgotFormat","minHeight","top","borderRadius","zIndex","boxShadow","fontSize","LoggedInName","CardUI","buildPath","route","card","search","searchResults","setResults","cardList","setCardList","_ud","getItem","ud","userId","console","log","addCard","e","searchCard","txt","_results","results","resultText","i","length","ref","c","CardPage","App","path","Boolean","hostname","match","history","createBrowserHistory","basename","process","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.7f2a5fb2.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react';\n\nfunction PageTitle()\n{\n   return(\n     <div id = \"title\" style={{color: 'white'}}>\n     <h3>Seppi - Grocery List and Recipe Finder</h3>\n     <h1 id=\"title2\">Find a Recipe</h1>\n     </div>\n   );\n};\n\nexport default PageTitle;\n","import React from 'react';\nimport Login from './Login';\nimport 'typeface-roboto';\nimport {Link} from \"react-router-dom\"\n\nconst Register =() => {\n   \n    const initialState = {\n        firstName: \"\",\n          lastName: \"\",\n          email: \"\",\n        password: \"\",\n        confirmPassword: \"\"      \n    };\n    const [data, setData] = React.useState(initialState);\n    \n    const handleChange = event => {\n        setData({\n          ...data,\n          [event.target.name]: event.target.value\n        });\n      };\n\n    //  registerFormat = {\n    //     width: '90%',\n    //     minHeight: '500px',\n    //     position: 'absolute',\n    //     top: '45%',\n    //     marginTop: '-200px',\n    //     backgroundColor: '#fff',\n    //     borderRadius: '2px',\n    //     zIndex: '100',\n    //     padding: '15px',\n    //     boxShadow: '0px 0px 4px rgba(0,0,0,.14),0px 4px 8px rgba(0,0,0,.28)',\n    //   }\n\n    return(\n        <div class=\"registerDiv\" \n        style={{width: \"60%\", textAlign: \"center\", margin: \"0 auto\"}}>\n                <h1 id = \"RegisterHeader\" >\n                    Sign up with email</h1><br/>\n                 <div> Already a member?<Link className=\"btn btn-primary\" to=\"/Login\"> Sign In</Link>\n                </div>\n                <form>\n                <input type=\"text\" \n                className=\"form-control mt-2\" \n                id=\"firstname\" \n                placeholder=\"Firstname\"\n                name=\"firstName\"\n                value={data.firstName}\n                onChange={handleChange} \n                required/>\n                <input type=\"text\" \n                className=\"form-control mt-2\" \n                id=\"lastname\" \n                name=\"lastName\"\n                placeholder=\"Lastname\"\n                value={data.lastName}\n                onChange={handleChange} \n                required/>\n                <input \n                type=\"text\" \n                className=\"form-control mt-2\" \n                id=\"email\" \n                name=\"email\"\n                placeholder=\"Email\" \n                value={data.email}\n                onChange={handleChange} \n                required/>\n                <input \n                type=\"password\" \n                className=\"form-control mt-2\" \n                id=\"password\" \n                name=\"password\"\n                placeholder=\"Enter Password\"\n                value={data.password}\n                onChange={handleChange}  \n                required/>\n                <input \n                type=\"password\" \n                className=\"form-control mt-2\" \n                id=\"PasswordConfirm\" \n                name=\"confirmPassword\"\n                placeholder=\"Confirm Password\"\n                value={data.confrirmPassword}\n                onChange={handleChange}  \n                required/>\n                <div id = \"passwordInfo\" className=\"mt-2\">\n                    Please provide a password of at least 6 characters.<br/>\n                    Your password must include at least 1 uppercase letter or special character.\n                </div>\n                <input type=\"submit\" id=\"registerButton\" \n                // onClick= {alert('registeration successful')} \n                className=\"btn btn-primary mt-3\" value = \"Create my Account\"/>\n                </form>\n            </div>\n\n    );\n};\n\nexport default Register;","import React, { useState } from 'react';\nimport LoginToRegister from './LoginToRegister';\nimport {Link} from \"react-router-dom\"\nconst Login=() => {\n    const app_name = 'seppi'\n\n    const buildPath=(route)=> {\n        if (process.env.NODE_ENV === 'production') \n        {\n            return 'https://' + app_name +  '.herokuapp.com/' + route;\n        }\n        else\n        {        \n            return 'http://localhost:5000/' + route;\n        }\n    }\n    const initialState = {\n        email: \"\",\n        password: \"\",\n          };\n  const [data, setData] = React.useState(initialState);\nconst   [message, setMessage] = React.useState('')  \n  const handleChange = event => {\n      setData({\n        ...data,\n        [event.target.name]: event.target.value\n      });\n    };\n    const doLogin = async event => {\n        event.preventDefault();\n\n        var obj = {email: data.email.value,\n                   password:data.password.value\n                   };\n        var js = JSON.stringify(obj);\n        // alert(js);\n        try\n        {    \n            const response = await fetch(buildPath('api/login'),\n                {method:'POST',\n                body:js,\n                headers:{'Content-Type': 'application/json'}\n            });\n\n            var res = JSON.parse(await response.text());\n            alert(res);\n            if( res.id <= 0 )\n            {\n                setMessage('User/Password combination incorrect');\n            }\n            else\n            {\n                var user = {firstName:res.firstName,lastName:res.lastName,id:res.id}\n                localStorage.setItem('user_data', JSON.stringify(user));\n\n                setMessage('');\n                window.location.href = '/CardPage';\n            }\n        }\n        catch(e)\n        {\n            alert(e.toString());\n            return;\n        }    \n    };\n\n    return(\n       <div className=\"loginForm\">\n        <div className=\"container\">\n        <form \n        onSubmit={doLogin} className=\"loginsForm\">\n        <h1>Login To Seppi</h1>\n        <div className=\"form-group\">\n          <label htmlFor=\"email\">Email address</label>\n          <input\n            value={data.email}\n            onChange={handleChange}\n            name=\"email\"\n            type=\"email\"\n            className=\"form-control\"\n            id=\"loginEmail\"\n            aria-describedby=\"emailHelp\"\n            required\n          />\n        </div>\n        <div className=\"form-group\">\n          <label htmlFor=\"password\">Password</label>\n          <input\n            value={data.password}\n            onChange={handleChange}\n            name=\"password\"\n            type=\"password\"\n            className=\"form-control\"\n            id=\"loginPassword\"\n            required\n          />\n        </div>\n        <button type=\"submit\" className=\"btn btn-primary\">\n          Submit\n        </button><br/>\n        <div className=\"row\">\n      <p> <Link className=\"col-md-4 mt-4 text-left\" to=\"/ForgotPassword\"  style={{color:\"blue\"}}>\n          Forgot password?{\" \"}\n          </Link></p>\n        <p className=\"col-md-8 mt-4 text-right\" id=\"switchToRegister\">\n          Don't have an account?{\" \"}\n          <Link className=\"btn btn-primary\" to=\"/register\">\n            Register\n          </Link>\n        </p>\n</div>\n      </form>\n      <div>\n         <span id=\"loginResult\">{message}</span>\n       </div>\n        </div>\n      </div>\n\n    );\n};\n\nexport default Login;\n","import React from 'react';\nimport SkyLight from 'react-skylight';\nimport Register from './Register';\nimport 'typeface-roboto';\n\nclass LoginToRegister extends React.Component {\n \n    registerFormat = {\n        width: '90%',\n        minHeight: '500px',\n        position: 'absolute',\n        top: '45%',\n        marginTop: '-200px',\n        backgroundColor: '#fff',\n        borderRadius: '2px',\n        zIndex: '100',\n        padding: '15px',\n        boxShadow: '0px 0px 4px rgba(0,0,0,.14),0px 4px 8px rgba(0,0,0,.28)',\n      }\n\n  render() {\n    console.log('step logintoregister');\n\n    return (\n      <div>\n        <button id = \"registerLink\" onClick ={() => this.customDialog.show()}>Register now</button>\n        <SkyLight dialogStyles={this.registerFormat} ref={ref => this.customDialog = ref}>\n            <div id = \"registerArea\">\n                <Register/>\n            </div>\n        </SkyLight>\n      </div>\n    );\n  }\n}\n\nexport default LoginToRegister;","import React from 'react';\r\nimport PageTitle from './PageTitle';\r\nimport 'typeface-roboto';\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport Button from 'react-bootstrap/Button'\r\nimport { Link } from 'react-router-dom'\r\nimport Login from './Login'\r\nimport Register from './Register'\r\n\r\nconst LoginPage = () => {\r\n  // Login button handler\r\n  const [show, setShowLogin] = React.useState(false);\r\n  const handleCloseLogin = () => setShowLogin(false);\r\n  const handleShowLogin = () => setShowLogin(true);\r\n\r\n  // Register button handler\r\n  const [showreg, setShowRegister] = React.useState(false);\r\n  const handleCloseRegister = () => setShowRegister(false);\r\n  const handleShowRegister = () => setShowRegister(true);\r\n\r\n  // doLogin function \r\n  const app_name = 'seppi'\r\n  const buildPath = (route) => {\r\n    if (process.env.NODE_ENV === 'production') {\r\n      return 'https://' + app_name + '.herokuapp.com/' + route;\r\n    }\r\n    else {\r\n      return 'http://localhost:5000/' + route;\r\n    }\r\n  }\r\n\r\n  // login state\r\n  const initialState = {\r\n    email: \"\",\r\n    password: \"\",\r\n  };\r\n  const [data, setData] = React.useState(initialState);\r\n  const [message, setMessage] = React.useState('')\r\n  const handleChange = event => {\r\n    setData({\r\n      ...data,\r\n      [event.target.name]: event.target.value\r\n    });\r\n  };\r\n  const doLogin = async event => {\r\n    event.preventDefault();\r\n\r\n    var obj = {\r\n      email: data.email.value,\r\n      password: data.password.value\r\n    };\r\n    var js = JSON.stringify(obj);\r\n    // alert(js);\r\n    try {\r\n      const response = await fetch(buildPath('api/login'),\r\n        {\r\n          method: 'POST',\r\n          body: js,\r\n          headers: { 'Content-Type': 'application/json' }\r\n        });\r\n\r\n      var res = JSON.parse(await response.text());\r\n      alert(res);\r\n      if (res.id <= 0) {\r\n        setMessage('User/Password combination incorrect');\r\n      }\r\n      else {\r\n        var user = { firstName: res.firstName, lastName: res.lastName, id: res.id }\r\n        localStorage.setItem('user_data', JSON.stringify(user));\r\n\r\n        setMessage('');\r\n        window.location.href = '/CardPage';\r\n      }\r\n    }\r\n    catch (e) {\r\n      alert(e.toString());\r\n      return;\r\n    }\r\n  };\r\n  \r\n// Register state\r\n  const regState = {\r\n    firstName: \"\",\r\n      lastName: \"\",\r\n      email: \"\",\r\n    password: \"\",\r\n    confirmPassword: \"\"      \r\n};\r\nconst [regdata, setRegData] = React.useState(regState);\r\n\r\nconst handleRegChange = event => {\r\n    setRegData({\r\n      ...data,\r\n      [event.target.name]: event.target.value\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div style={{\r\n      backgroundImage: `linear-gradient(to top, rgba(114, 51, 51, 0) 10%, rgba(0, 100, 0, 2)), url(\"../images/home_page.jpeg\")`, backgroundRepeat: 'no-repeat', width: '100%', height: '650px', backgroundSize: \"cover\"\r\n    }}>\r\n      <div className=\"MainBody\">\r\n        <div className=\"signIn\">\r\n\r\n          <button className=\"btn btn-primary\" id=\"logIN\" onClick={handleShowLogin}>\r\n            Log In\r\n              </button>&nbsp;&nbsp;\r\n              <button className=\"btn btn-primary\" id=\"signUP\" onClick={handleShowRegister}>\r\n            Sign Up\r\n              </button>\r\n        </div>\r\n        <PageTitle />\r\n        <form id=\"searchParameter\">\r\n          <input id=\"search\" type=\"text\" placeholder=\"Search\" /><span className=\"search\" style={{ position: \"absolute\", backgroundColor: \"white\", padding: '2px', marginTop: \"0.5px\" }}><i className=\"fa fa-search\" ></i></span>\r\n        </form>\r\n        <div className=\"centered\">\r\n        </div>\r\n      </div>\r\n      <div className=\"subBody\">\r\n        <div>\r\n          <div className=\"Suggestions\" style={{ color: 'white' }}>\r\n            Suggested Recipes TEST\r\n              </div>\r\n        </div>\r\n      </div>\r\n      {/* Login Modal */}\r\n      <Modal show={show} onHide={handleCloseLogin}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Login To Seppi</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body >\r\n          <form\r\n            onSubmit={doLogin} className=\"loginsForm\">\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"email\">Email address</label>\r\n              <input\r\n                value={data.email}\r\n                onChange={handleChange}\r\n                name=\"email\"\r\n                type=\"email\"\r\n                className=\"form-control\"\r\n                id=\"loginEmail\"\r\n                aria-describedby=\"emailHelp\"\r\n                required\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"password\">Password</label>\r\n              <input\r\n                value={data.password}\r\n                onChange={handleChange}\r\n                name=\"password\"\r\n                type=\"password\"\r\n                className=\"form-control\"\r\n                id=\"loginPassword\"\r\n                required\r\n              />\r\n            </div>\r\n            <button type=\"submit\" className=\"btn btn-primary\">\r\n              Submit\r\n        </button><br />\r\n            <div className=\"row\">\r\n              <p> <Link className=\"col-md-4 mt-4 text-left\" to=\"/ForgotPassword\" style={{ color: \"blue\" }}>\r\n                Forgot password?{\" \"}\r\n              </Link></p>\r\n              <p className=\"col-md-8 mt-4 text-right\" id=\"switchToRegister\">\r\n                Don't have an account?{\" \"}\r\n                <Link className=\"btn btn-primary\" to=\"/register\">\r\n                  Register\r\n          </Link>\r\n              </p>\r\n            </div>\r\n          </form>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={handleCloseLogin}>\r\n            Close\r\n          </Button>\r\n          <Button variant=\"primary\" onClick={handleCloseLogin}>\r\n            Save Changes\r\n          </Button>\r\n          <span id=\"loginResult\">{message}</span>\r\n        </Modal.Footer>\r\n      </Modal>\r\n\r\n\r\n      {/* Register modal */}\r\n      <Modal show={showreg} onHide={handleCloseRegister} >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Sign up with email</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body >\r\n          <div> Already a member?<Link className=\"btn btn-primary\" to=\"/Login\"> Sign In</Link>\r\n          </div>\r\n          <form>\r\n            <input type=\"text\"\r\n              className=\"form-control mt-2\"\r\n              id=\"firstname\"\r\n              placeholder=\"Firstname\"\r\n              name=\"firstName\"\r\n              value={regdata.firstName}\r\n              onChange={handleRegChange}\r\n              required />\r\n            <input type=\"text\"\r\n              className=\"form-control mt-2\"\r\n              id=\"lastname\"\r\n              name=\"lastName\"\r\n              placeholder=\"Lastname\"\r\n              value={regdata.lastName}\r\n              onChange={handleRegChange}\r\n              required />\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control mt-2\"\r\n              id=\"email\"\r\n              name=\"email\"\r\n              placeholder=\"Email\"\r\n              value={regdata.email}\r\n              onChange={handleRegChange}\r\n              required />\r\n            <input\r\n              type=\"password\"\r\n              className=\"form-control mt-2\"\r\n              id=\"password\"\r\n              name=\"password\"\r\n              placeholder=\"Enter Password\"\r\n              value={regdata.password}\r\n              onChange={handleRegChange}\r\n              required />\r\n            <input\r\n              type=\"password\"\r\n              className=\"form-control mt-2\"\r\n              id=\"PasswordConfirm\"\r\n              name=\"confirmPassword\"\r\n              placeholder=\"Confirm Password\"\r\n              value={regdata.confrirmPassword}\r\n              onChange={handleRegChange}\r\n              required />\r\n            <div id=\"passwordInfo\" className=\"mt-2\">\r\n              Please provide a password of at least 6 characters.<br />\r\n                    Your password must include at least 1 uppercase letter or special character.\r\n                </div>\r\n            <input type=\"submit\" id=\"registerButton\"\r\n              // onClick= {alert('registeration successful')} \r\n              className=\"btn btn-primary mt-3\" value=\"Create my Account\" />\r\n          </form>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={handleCloseRegister}>\r\n            Close\r\n          </Button>\r\n          <Button variant=\"primary\" onClick={handleCloseRegister}>\r\n            Save Changes\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default LoginPage;","import React from 'react';\nimport LoginPage from './LoginPage';\nimport 'typeface-roboto';\nimport {Link} from \"react-router-dom\"\nclass ForgotPassword extends React.Component {\n    \n    forgotFormat = {\n        width: '90%',\n        minHeight: '500px',\n        position: 'absolute',\n        top: '45%',\n        marginTop: '-200px',\n        backgroundColor: '#fff',\n        borderRadius: '2px',\n        zIndex: '100',\n        padding: '15px',\n        boxShadow: '0px 0px 4px rgba(0,0,0,.14),0px 4px 8px rgba(0,0,0,.28)',\n      }\n\n    render () {\n    return(\n        <div id=\"forgotPasswordDiv\">\n            <div>\n                <br />\n                <span id=\"inner-title\"><h1>Forgot Password?</h1></span><br />\n                <form>\n                <p id=\"forgot-pass-prompt\" style={{fontSize: \"20px\"}}>Please enter your email address below and we will send you a link and instructions to reset your password.</p>\n                <input type=\"text\" id=\"Email\" className=\"form-control\" style={{width: \"50%\", margin: \"0 auto\"}} placeholder=\"Email\" required/><br />\n                <br />\n                <button id = \"forgot\">\n                    Reset Password\n                </button>\n                </form>\n                <div id = \"switchToLogin\" className=\"found mt-4\">\n                    Found that Password <Link className=\"btn btn-primary\" to=\"/Login\">\n            Login\n          </Link>\n                </div>\n            </div>\n            <Link className=\"btn btn-success mt-2\" to=\"/LoginPage\">\n           Go Home\n          </Link>\n        </div>\n    );\n    }\n};\n\nexport default ForgotPassword;","import React from 'react';\n\nfunction LoggedInName()\n{\n\n    //var user={}\n\n    const doLogout = event => \n    {\n\t    event.preventDefault();\n\t\t\n        alert('doLogout');\n    };    \n\n    return(\n      <div id=\"loggedInDiv\">\n        <span id=\"userName\">Logged In As John Doe </span><br />\n        <button type=\"button\" id=\"logoutButton\" class=\"buttons\" \n           onClick={doLogout}> Log Out </button>\n      </div>\n    );\n};\n\nexport default LoggedInName;\n","import React, { useState } from 'react';\n\nfunction CardUI()\n{\n  const app_name = 'seppi'\n  function buildPath(route)\n  {\n      if (process.env.NODE_ENV === 'production') \n      {\n          return 'https://' + app_name +  '.herokuapp.com/' + route;\n      }\n      else\n      {        \n          return 'http://localhost:5000/' + route;\n      }\n  }\n\n    var card = '';\n    var search = '';\n\n    const [message,setMessage] = useState('');\n    const [searchResults,setResults] = useState('');\n    const [cardList,setCardList] = useState('');\n\n    var _ud = localStorage.getItem('user_data');\n    var ud = JSON.parse(_ud);\n    var userId = ud.id;\n    var firstName = ud.firstName;\n    var lastName = ud.lastName;\n    console.log(firstName);\n    console.log(lastName);\n\t\n    const addCard = async event => \n    {\n\t    event.preventDefault();\n\n        var obj = {userId:userId,card:card.value};\n        var js = JSON.stringify(obj);\n\n        try\n        {\n            const response = fetch(buildPath('api/addcard'),\n            {method:'POST',body:js,headers:{'Content-Type': 'application/json'}});\n\n            console.log(response);\n\n            setMessage('Card has been added');\n        }\n        catch(e)\n        {\n            setMessage(e.toString());\n        }\n\n\t};\n\n    const searchCard = async event => \n    {\n        event.preventDefault();\n        \t\t\n        var obj = {userId:userId,search:search.value};\n        var js = JSON.stringify(obj);\n\n        try\n        {\n            const response = await fetch(buildPath('api/searchcards'),\n            {method:'POST',body:js,headers:{'Content-Type': 'application/json'}});\n\n            var txt = await response.text();\n            var res = JSON.parse(txt);\n            var _results = res.results;\n            var resultText = '';\n            for( var i=0; i<_results.length; i++ )\n            {\n                resultText += _results[i];\n                if( i < _results.length - 1 )\n                {\n                    resultText += ', ';\n                }\n            }\n            setResults('Card(s) have been retrieved');\n            setCardList(resultText);\n        }\n        catch(e)\n        {\n            alert(e.toString());\n            setResults(e.toString());\n        }\n    };\n\n    return(\n        <div id=\"cardUIDiv\">\n        <br />\n        <input type=\"text\" id=\"searchText\" placeholder=\"Card To Search For\" \n          ref={(c) => search = c} />\n        <button type=\"button\" id=\"searchCardButton\" class=\"buttons\" \n          onClick={searchCard}> Search Card</button><br />\n        <span id=\"cardSearchResult\">{searchResults}</span>\n        <p id=\"cardList\">{cardList}</p><br /><br />\n        <input type=\"text\" id=\"cardText\" placeholder=\"Card To Add\" \n          ref={(c) => card = c} />\n        <button type=\"button\" id=\"addCardButton\" class=\"buttons\" \n          onClick={addCard}> Add Card </button><br />\n        <span id=\"cardAddResult\">{message}</span>\n      </div>\n      \n    );\n}\n\nexport default CardUI;\n","import React from 'react';\nimport PageTitle from './PageTitle';\nimport LoggedInName from './LoggedInName';\nimport CardUI from './CardUI';\n\nconst CardPage = () =>\n{\n    return(\n        <div>\n            <PageTitle />\n            <LoggedInName />\n            <CardUI />\n        </div>\n    );\n}\n\nexport default CardPage;\n","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport LoginPage from './components/LoginPage';\nimport Login from './components/Login';\nimport Register from './components/Register';\nimport ForgotPassword from './components/ForgotPassword';\nimport CardPage from './components/CardPage';\nimport {\n  HashRouter as Router,\n  Switch,\n  Route,\n  Link,\n  useRouteMatch,\n  useParams\n} from \"react-router-dom\";\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n {/* <Router>      */}\n<Switch>\n   <Route  path=\"/CardPage\"><CardPage/></Route>\n   <Route  path=\"/ForgotPassword\"><ForgotPassword/></Route>\n   <Route  path=\"/Register\"><Register/></Route>\n   <Route  path=\"/Login\"><Login/></Route>\n<LoginPage path=\"/\"/>\n  \n</Switch>\n{/* </Router> */}\n          </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport { createBrowserHistory } from \"history\";\nimport {BrowserRouter as Router} from \"react-router-dom\"\n\nconst history = createBrowserHistory({\n        basename: process.env.PUBLIC_URL,\n      });\nReactDOM.render(\n  <Router history={history}>\n    <App />\n  </Router>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}