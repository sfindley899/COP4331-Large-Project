{"version":3,"sources":["logo.svg","components/PageTitle.js","components/Register.js","components/LoginToRegister.js","components/Login.js","components/LoginPage.js","components/LoggedInName.js","components/CardUI.js","components/CardPage.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","PageTitle","id","Register","registerFormat","width","minHeight","position","top","marginTop","backgroundColor","borderRadius","zIndex","padding","boxShadow","type","placeholder","class","value","React","Component","LoginToRegister","console","log","onClick","customDialog","show","dialogStyles","this","ref","Login","loginName","loginPassword","useState","message","setMessage","doLogin","event","a","preventDefault","obj","login","password","js","JSON","stringify","alert","fetch","method","body","headers","response","text","res","parse","user","firstName","lastName","localStorage","setItem","window","location","href","toString","c","undefined","LoginPage","state","showLogin","showRegister","handleLoginClick","setState","handleRegisterClick","className","LoggedInName","CardUI","buildPath","route","card","search","searchResults","setResults","cardList","setCardList","_ud","getItem","ud","userId","addCard","e","searchCard","txt","_results","results","resultText","i","length","CardPage","App","path","Boolean","hostname","match","history","createBrowserHistory","basename","process","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.4963f826.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react';\n\nfunction PageTitle()\n{\n   return(\n     <div id = \"title\">\n     <h3>Seppi - Grocery List and Recipe Finder</h3>\n     <h1 id=\"title2\">Find a Recipe</h1>\n     </div>\n   );\n};\n\nexport default PageTitle;\n","import React from 'react';\nimport Login from './Login';\n// import 'typeface-roboto';\nclass Register extends React.Component {\n   \n     registerFormat = {\n        width: '90%',\n        minHeight: '500px',\n        position: 'absolute',\n        top: '45%',\n        marginTop: '-200px',\n        backgroundColor: '#fff',\n        borderRadius: '2px',\n        zIndex: '100',\n        padding: '15px',\n        boxShadow: '0px 0px 4px rgba(0,0,0,.14),0px 4px 8px rgba(0,0,0,.28)',\n      }\n\nrender() {\n    return(\n        <div id=\"registerDiv\">\n            <div>\n                <br />\n                <div id = \"RegisterHeader\">\n                    Sign up with email.<button id = \"loginLink\">Already a member? Sign in!<Login/></button>\n                </div>\n                <input type=\"text\" id=\"registerDisplayName\" placeholder=\"Display name (what others see)\"/>\n                <input type=\"text\" id=\"registerEmail\" placeholder=\"Email\"/>\n                <input type=\"password\" id=\"registerPassword\" placeholder=\"Password\"/>\n                <input type=\"password\" id=\"registerPasswordConfirm\" placeholder=\"Confirm Password\"/>\n                <div id = \"passwordInfo\">\n                    Please provide a password of at least 6 characters. Your password must include at least 1 uppercase letter or special character.\n                </div>\n                <input type=\"submit\" id=\"registerButton\" class=\"buttons\" value = \"Create my Account\"/>\n            </div>\n        </div>\n    );\n}\n};\n\nexport default Register;","import React from 'react';\nimport SkyLight from 'react-skylight';\nimport Register from './Register';\nimport 'typeface-roboto';\n\nclass LoginToRegister extends React.Component {\n \n    registerFormat = {\n        width: '90%',\n        minHeight: '500px',\n        position: 'absolute',\n        top: '45%',\n        marginTop: '-200px',\n        backgroundColor: '#fff',\n        borderRadius: '2px',\n        zIndex: '100',\n        padding: '15px',\n        boxShadow: '0px 0px 4px rgba(0,0,0,.14),0px 4px 8px rgba(0,0,0,.28)',\n      }\n\n  render() {\n    console.log('step logintoregister');\n\n    return (\n      <div>\n        <button id = \"registerLink\" onClick ={() => this.customDialog.show()}>Register now</button>\n        <SkyLight dialogStyles={this.registerFormat} ref={ref => this.customDialog = ref}>\n            <div id = \"registerArea\">\n                <Register/>\n            </div>\n        </SkyLight>\n      </div>\n    );\n  }\n}\n\nexport default LoginToRegister;","import React, { useState } from 'react';\nimport LoginToRegister from './LoginToRegister';\n\nconst Login=() => {\n    const app_name = 'seppi'\n\n    const buildPath=(route)=> {\n        if (process.env.NODE_ENV === 'production') \n        {\n            return 'https://' + app_name +  '.herokuapp.com/' + route;\n        }\n        else\n        {        \n            return 'http://localhost:5000/' + route;\n        }\n    }\n    \n    var loginName;\n    var loginPassword;\n\n    const [message,setMessage] = useState('');\n\n    const doLogin = async event => {\n        event.preventDefault();\n\n        var obj = {login:loginName.value,\n                   password:loginPassword.value\n                   };\n        var js = JSON.stringify(obj);\n        alert(js);\n        try\n        {    \n            const response = await fetch(buildPath('api/login'),\n                {method:'POST',\n                body:js,\n                headers:{'Content-Type': 'application/json'}\n            });\n\n            var res = JSON.parse(await response.text());\n            alert(res);\n            if( res.id <= 0 )\n            {\n                setMessage('User/Password combination incorrect');\n            }\n            else\n            {\n                var user = {firstName:res.firstName,lastName:res.lastName,id:res.id}\n                localStorage.setItem('user_data', JSON.stringify(user));\n\n                setMessage('');\n                window.location.href = '/cards';\n            }\n        }\n        catch(e)\n        {\n            alert(e.toString());\n            return;\n        }    \n    };\n\n  \n\n    return(\n      <div id=\"loginDiv\">\n        <div>\n        <br />\n        <span id=\"inner-title\">Log In to Seppi</span><br />\n        <input type=\"text\" id=\"loginEmail\" placeholder=\"Email\"  ref={(c) => loginName = c} /><br />\n        <input type=\"password\" id=\"loginPassword\" placeholder=\"Password\" ref={(c) => loginPassword = c}  />\n        <br />\n        <button id = \"forgot\" onClick ={() => alert(undefined)}>\n            Forgot password?\n        </button>\n        <input type=\"submit\" id=\"loginButton\" class=\"buttons\" value = \"Log In\" onClick={doLogin} />\n          <div id = \"switchToRegister\">\n             Don't have a login?\n             <LoginToRegister/>\n          </div>\n        </div>\n         <span id=\"loginResult\">{message}</span>\n       </div>\n    );\n};\n\nexport default Login;\n","import React from 'react';\r\nimport PageTitle from './PageTitle';\r\nimport SkyLight from 'react-skylight';\r\nimport 'typeface-roboto';\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport Login from './Login'\r\nimport Register from './Register'\r\n\r\nclass LoginPage extends React.Component {\r\n  state = {\r\n    showLogin: false,\r\n    showRegister: false\r\n  }\r\n  // const [show, setShow] = React.useState(false);\r\n\r\n  // registerFormat = {\r\n  //   minHeight: '500px',\r\n  //   position: 'fixed',\r\n  //   top: '45%',\r\n  //   left: '50%',\r\n  //   marginTop: '-200px',\r\n  //   marginLeft: '-25%',\r\n  //   backgroundColor: '#fff',\r\n  //   borderRadius: '2px',\r\n  //   zIndex: '100',\r\n  //   padding: '15px',\r\n  //   boxShadow: '0px 0px 4px rgba(0,0,0,.14),0px 4px 8px rgba(0,0,0,.28)',\r\n  // }\r\n\r\n  handleLoginClick = () => {\r\n    this.setState({ showLogin: !this.state.showLogin })\r\n  }\r\n  handleRegisterClick = () => {\r\n    this.setState({ showRegister: !this.state.showRegister })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div class=\"MainBody\">\r\n          <div class=\"signIn\">\r\n\r\n            <button className=\"btn btn-primary\" id=\"logIN\" onClick={this.handleLoginClick}>\r\n              Log In\r\n              </button>&nbsp;&nbsp;\r\n              <button className=\"btn btn-primary\" id=\"signUP\" onClick={this.handleRegisterClick}>\r\n              Sign Up\r\n              </button>\r\n          </div>\r\n          {/* {this.state.showLogin ? <Login/>: \"\"}\r\n          {this.state.showRegister && <Register/>} */}\r\n          {/* <Login/> */}\r\n          <PageTitle />\r\n          <form id=\"searchParameter\">\r\n            <input id=\"search\" type=\"text\" placeholder=\"Find a Recipe\"></input>\r\n          </form>\r\n          <div className=\"centered\">\r\n          </div>\r\n        </div>\r\n        <div className=\"subBody\">\r\n          <div>\r\n            <div className=\"Suggestions\">\r\n              Suggested Recipes\r\n              </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\nexport default LoginPage;","import React from 'react';\n\nfunction LoggedInName()\n{\n\n    //var user={}\n\n    const doLogout = event => \n    {\n\t    event.preventDefault();\n\t\t\n        alert('doLogout');\n    };    \n\n    return(\n      <div id=\"loggedInDiv\">\n        <span id=\"userName\">Logged In As John Doe </span><br />\n        <button type=\"button\" id=\"logoutButton\" class=\"buttons\" \n           onClick={doLogout}> Log Out </button>\n      </div>\n    );\n};\n\nexport default LoggedInName;\n","import React, { useState } from 'react';\n\nfunction CardUI()\n{\n  const app_name = 'seppi'\n  function buildPath(route)\n  {\n      if (process.env.NODE_ENV === 'production') \n      {\n          return 'https://' + app_name +  '.herokuapp.com/' + route;\n      }\n      else\n      {        \n          return 'http://localhost:5000/' + route;\n      }\n  }\n\n    var card = '';\n    var search = '';\n\n    const [message,setMessage] = useState('');\n    const [searchResults,setResults] = useState('');\n    const [cardList,setCardList] = useState('');\n\n    var _ud = localStorage.getItem('user_data');\n    var ud = JSON.parse(_ud);\n    var userId = ud.id;\n    var firstName = ud.firstName;\n    var lastName = ud.lastName;\n    console.log(firstName);\n    console.log(lastName);\n\t\n    const addCard = async event => \n    {\n\t    event.preventDefault();\n\n        var obj = {userId:userId,card:card.value};\n        var js = JSON.stringify(obj);\n\n        try\n        {\n            const response = fetch(buildPath('api/addcard'),\n            {method:'POST',body:js,headers:{'Content-Type': 'application/json'}});\n\n            console.log(response);\n\n            setMessage('Card has been added');\n        }\n        catch(e)\n        {\n            setMessage(e.toString());\n        }\n\n\t};\n\n    const searchCard = async event => \n    {\n        event.preventDefault();\n        \t\t\n        var obj = {userId:userId,search:search.value};\n        var js = JSON.stringify(obj);\n\n        try\n        {\n            const response = await fetch(buildPath('api/searchcards'),\n            {method:'POST',body:js,headers:{'Content-Type': 'application/json'}});\n\n            var txt = await response.text();\n            var res = JSON.parse(txt);\n            var _results = res.results;\n            var resultText = '';\n            for( var i=0; i<_results.length; i++ )\n            {\n                resultText += _results[i];\n                if( i < _results.length - 1 )\n                {\n                    resultText += ', ';\n                }\n            }\n            setResults('Card(s) have been retrieved');\n            setCardList(resultText);\n        }\n        catch(e)\n        {\n            alert(e.toString());\n            setResults(e.toString());\n        }\n    };\n\n    return(\n        <div id=\"cardUIDiv\">\n        <br />\n        <input type=\"text\" id=\"searchText\" placeholder=\"Card To Search For\" \n          ref={(c) => search = c} />\n        <button type=\"button\" id=\"searchCardButton\" class=\"buttons\" \n          onClick={searchCard}> Search Card</button><br />\n        <span id=\"cardSearchResult\">{searchResults}</span>\n        <p id=\"cardList\">{cardList}</p><br /><br />\n        <input type=\"text\" id=\"cardText\" placeholder=\"Card To Add\" \n          ref={(c) => card = c} />\n        <button type=\"button\" id=\"addCardButton\" class=\"buttons\" \n          onClick={addCard}> Add Card </button><br />\n        <span id=\"cardAddResult\">{message}</span>\n      </div>\n      \n    );\n}\n\nexport default CardUI;\n","import React from 'react';\nimport PageTitle from './PageTitle';\nimport LoggedInName from './LoggedInName';\nimport CardUI from './CardUI';\n\nconst CardPage = () =>\n{\n    return(\n        <div>\n            <PageTitle />\n            <LoggedInName />\n            <CardUI />\n        </div>\n    );\n}\n\nexport default CardPage;\n","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport LoginPage from './components/LoginPage';\nimport Login from './components/Login';\nimport Register from './components/Register';\nimport CardPage from './components/CardPage';\nimport {\n  HashRouter as Router,\n  Switch,\n  Route,\n  Link,\n  useRouteMatch,\n  useParams\n} from \"react-router-dom\";\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n {/* <Router>      */}\n<Switch>\n   <Route  path=\"/CardPage\"><CardPage/></Route>\n   <Route  path=\"/Register\"><Register/></Route>\n   <Route  path=\"/Login\"><Login/></Route>\n<LoginPage path=\"/\"/>\n  \n</Switch>\n{/* </Router> */}\n          </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport { createBrowserHistory } from \"history\";\nimport {BrowserRouter as Router} from \"react-router-dom\"\n\nconst history = createBrowserHistory({\n        basename: process.env.PUBLIC_URL,\n      });\nReactDOM.render(\n  <Router history={history}>\n    <App />\n  </Router>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}